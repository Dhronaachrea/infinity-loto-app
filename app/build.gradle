apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'org.sonarqube'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.skilrock.infinitylotoapp"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 100
        versionName "2.0.0"
        //versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        applicationVariants.all { variant ->
            variant.outputs.all {
                String name = "${variant.productFlavors[0].name}".toUpperCase()
                try {
                    if (name.contains("_")) {
                        String[] arrName = name.split("_")
                        if (arrName.length > 1) {
                            name = arrName[1] + "_" + arrName[0]
                        }
                    }
                } catch (Exception ignored) {
                    name = "${variant.productFlavors[0].name}".toUpperCase()
                }
                def formattedDate = new Date().format('ddMMM')
                //String versionId = "${buildConfigFields.get("versionId").value}"
                outputFileName = "${name}-v${defaultConfig.versionCode}-${formattedDate}.apk"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    flavorDimensions "default"
    productFlavors {
        qA_SABANZURI {
            buildConfigField "String", "CLIENT", '"SABANZURI"'
            buildConfigField "String", "BASE_URL", '"https://kenya-api.infinitilotto.com/"'
            buildConfigField "String", "TICKET_RESULT_URL", '"https://games.sabanzuri.com/"'
            buildConfigField "String", "CASHIER_URL", '"https://cashier.infinitilotto.com/"'
            buildConfigField "String", "DRAWER_URL", '"https://www.sabanzuri.com/"'
            buildConfigField "String", "APP_NAME", '"Infiniti Lotto"'
            buildConfigField "String", "DOMAIN_NAME", '"www.sabanzurilotto.com"'
            buildConfigField "String", "CURRENCY_SYMBOL", '"KES"' //฿
            buildConfigField "String", "CURRENCY", '"KES"'
            buildConfigField "String", "CURRENCY_DISPLAY_CODE", '"KES"'
            buildConfigField "String", "LANGUAGE", '"en"'
            buildConfigField "boolean", "IS_LOGIN_MANDATORY", "false"
            buildConfigField "String", "COUNTRY_CODE", '"KE"'
            buildConfigField 'int', 'CURRENCY_ID', '13'
            buildConfigField 'int', 'MOBILE_NO_LENGTH', '9'
        }
        uAT_SABANZURI {
            buildConfigField "String", "CLIENT", '"SABANZURI"'
            buildConfigField "String", "BASE_URL", '"https://uat-api.sabanzuri.com/"'
            buildConfigField "String", "TICKET_RESULT_URL", '"https://games.sabanzuri.com/"'
            buildConfigField "String", "CASHIER_URL", '"https://cashier.infinitilotto.com/"'
            buildConfigField "String", "DRAWER_URL", '"https://www.sabanzuri.com/"'
            buildConfigField "String", "APP_NAME", '"Infiniti Lotto"'
            buildConfigField "String", "DOMAIN_NAME", '"www.sabanzuri.com"'
            buildConfigField "String", "CURRENCY_SYMBOL", '"KES"' //฿
            buildConfigField "String", "CURRENCY_DISPLAY_CODE", '"KES"'
            buildConfigField "String", "CURRENCY", '"KES"'
            buildConfigField "String", "LANGUAGE", '"en"'
            buildConfigField "boolean", "IS_LOGIN_MANDATORY", "false"
            buildConfigField "String", "COUNTRY_CODE", '"KE"'
            buildConfigField 'int', 'CURRENCY_ID', '13'
            buildConfigField 'int', 'MOBILE_NO_LENGTH', '9'
        }
        pROD_SABANZURI {
            buildConfigField "String", "CLIENT", '"SABANZURI"'
            buildConfigField "String", "BASE_URL", '"https://api.sabanzuri.com/"'
            buildConfigField "String", "TICKET_RESULT_URL", '"https://games.sabanzuri.com/"'
            buildConfigField "String", "CASHIER_URL", '"https://cashier-backend.sabanzuri.com/"'
            buildConfigField "String", "DRAWER_URL", '"https://www.sabanzuri.com/"'
            buildConfigField "String", "JACKPOT_TIMER_URL", '"http://portal.infinitilotto.com/index.php/component/"'
            buildConfigField "String", "APP_NAME", '"Infiniti Lotto"'
            buildConfigField "String", "DOMAIN_NAME", '"www.sabanzuri.com"'
            buildConfigField "String", "CURRENCY_SYMBOL", '"KES"' //฿
            buildConfigField "String", "CURRENCY_DISPLAY_CODE", '"KES"'
            buildConfigField "String", "CURRENCY", '"KES"'
            buildConfigField "String", "LANGUAGE", '"en"'
            buildConfigField "boolean", "IS_LOGIN_MANDATORY", "false"
            buildConfigField "String", "COUNTRY_CODE", '"KE"'
            buildConfigField 'int', 'CURRENCY_ID', '15'
            buildConfigField 'int', 'MOBILE_NO_LENGTH', '9'
        }
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

sonarqube {
    properties {
        property "sonar.projectName", "Sabanzuri Lotto"
        property "sonar.projectKey", "org.sonarqube:android-sabanzuri-gradle"
        property "sonar.language", "kotlin"
        property "sonar.language", "java"
        property "sonar.sources", "src"
        property "sonar.binaries", "build"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.login", "admin"
        property "sonar.password", "android"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.3.0-rc01'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.annotation:annotation:1.2.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // Retrofit, OkHttp and GSON
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'

    // Kotlin Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2'

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"

    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.1"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"

    // Card View
    implementation "androidx.cardview:cardview:1.0.0"

    //Recycler View
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation "androidx.recyclerview:recyclerview-selection:1.1.0"

    implementation 'androidx.core:core-ktx:1.6.0-alpha01'
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"

    implementation "androidx.navigation:navigation-fragment-ktx:2.3.4"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.4"

    implementation "androidx.navigation:navigation-dynamic-features-fragment:2.3.4"

    implementation 'com.budiyev.android:code-scanner:2.1.0'
    implementation 'com.github.Piashsarker:AndroidAppUpdateLibrary:1.0.3'
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    implementation 'com.github.angads25:toggle:1.1.0'

    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:26.2.0')

    // Add the dependency for the Firebase SDK for Google Analytics
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries
    implementation 'com.google.firebase:firebase-messaging-ktx'

}
